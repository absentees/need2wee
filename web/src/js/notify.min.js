!function(t,i){"use strict";"function"==typeof define&&define.amd?define(function(){return i(t,t.document)}):"undefined"!=typeof module&&module.exports?module.exports=i(t,t.document):t.Notify=i(t,t.document)}("undefined"!=typeof window?window:this,function(t,i){"use strict";function o(t){return"function"==typeof t}function n(t,i){if("string"!=typeof t)throw new Error("Notify(): first arg (title) must be a string.");if(this.title=t,this.options={icon:"",body:"",tag:"",lang:"en",notifyShow:null,notifyClose:null,notifyClick:null,notifyError:null,timeout:null,requireInteraction:!1,closeOnClick:!1},this.permission=null,"object"==typeof i){for(var n in i)i.hasOwnProperty(n)&&(this.options[n]=i[n]);o(this.options.notifyShow)&&(this.onShowCallback=this.options.notifyShow),o(this.options.notifyClose)&&(this.onCloseCallback=this.options.notifyClose),o(this.options.notifyClick)&&(this.onClickCallback=this.options.notifyClick),o(this.options.notifyError)&&(this.onErrorCallback=this.options.notifyError)}}var e=t.Notification;return n.isSupported=function(t){if(!e||!e.requestPermission)return!1;if("granted"===t||"granted"===e.permission)throw new Error("You must only call this before calling Notification.requestPermission(), otherwise this feature detect would trigger an actual notification!");try{new e("")}catch(i){if("TypeError"===i.name)return!1}return!0},n.needsPermission=e&&e.permission&&"granted"===e.permission?!1:!0,n.requestPermission=function(t,i){e.requestPermission(function(e){switch(e){case"granted":n.needsPermission=!1,o(t)&&t();break;case"denied":n.needsPermission=!0,o(i)&&i()}})},n.prototype.show=function(){this.myNotify=new e(this.title,{body:this.options.body,tag:this.options.tag,icon:this.options.icon,lang:this.options.lang,requireInteraction:this.options.requireInteraction,closeOnClick:this.options.closeOnClick}),this.options.requireInteraction||!this.options.timeout||isNaN(this.options.timeout)||setTimeout(this.close.bind(this),1e3*this.options.timeout),this.myNotify.addEventListener("show",this,!1),this.myNotify.addEventListener("error",this,!1),this.myNotify.addEventListener("close",this,!1),this.myNotify.addEventListener("click",this,!1)},n.prototype.onShowNotification=function(t){this.onShowCallback&&this.onShowCallback(t)},n.prototype.onCloseNotification=function(t){this.onCloseCallback&&this.onCloseCallback(t),this.destroy()},n.prototype.onClickNotification=function(t){this.onClickCallback&&this.onClickCallback(t),this.options.closeOnClick&&this.close()},n.prototype.onErrorNotification=function(t){this.onErrorCallback&&this.onErrorCallback(t),this.destroy()},n.prototype.destroy=function(){this.myNotify.removeEventListener("show",this,!1),this.myNotify.removeEventListener("error",this,!1),this.myNotify.removeEventListener("close",this,!1),this.myNotify.removeEventListener("click",this,!1)},n.prototype.close=function(){this.myNotify.close()},n.prototype.handleEvent=function(t){switch(t.type){case"show":this.onShowNotification(t);break;case"close":this.onCloseNotification(t);break;case"click":this.onClickNotification(t);break;case"error":this.onErrorNotification(t)}},n});
